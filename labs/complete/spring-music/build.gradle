buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.5'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.3'
        classpath("io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE")
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
    }
}

apply plugin: 'java'

apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'tomcat'
apply plugin: 'war'

apply plugin: 'cloudfoundry'

apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: "propdeps-idea"

version = '1.0'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/java'
        }
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
archivesBaseName = "spring-music"

jar {
    manifest {
        attributes 'Implementation-Title': 'Spring Sample Application', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.0.RC1'
    }
}

dependencies {
    // Spring and dependencies
    compile "org.springframework:spring-context"
    compile "org.springframework:spring-webmvc"

    // Spring Cloud
    compile "org.springframework.cloud:spring-cloud-spring-service-connector"
    compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector"

    // Spring Data
    compile "org.springframework.data:spring-data-jpa"
    compile "org.springframework.data:spring-data-redis"
    compile "org.springframework.data:spring-data-mongodb"

    // JPA Persistence
    compile "commons-dbcp:commons-dbcp"
    compile "org.hibernate:hibernate-entitymanager"
    runtime "com.h2database:h2"
    runtime "mysql:mysql-connector-java"
    runtime "postgresql:postgresql:9.1-901-1.jdbc4"

    // Redis Persistence
    compile "redis.clients:jedis"

    // JSR-303 validation
    compile "javax.validation:validation-api"
    compile "org.hibernate:hibernate-validator"

    // Webjars
    compile "org.webjars:bootstrap:3.1.1"
    compile "org.webjars:angularjs:1.2.16"
    compile "org.webjars:angular-ui:0.4.0-2"
    compile "org.webjars:angular-ui-bootstrap:0.10.0-1"
    compile "org.webjars:jquery:2.1.0-2"

    // Jackson
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.13"
    compile "com.fasterxml.jackson.core:jackson-core"
    compile "com.fasterxml.jackson.core:jackson-databind"

    // Logging
    compile "org.slf4j:slf4j-api"
    compile "org.slf4j:slf4j-log4j12"

    // Servlet
    compile "javax.servlet:jstl:1.2"
    providedCompile 'javax.servlet:javax.servlet-api'

    // Testing
    testCompile "junit:junit"

    // Spring Testing
    testCompile "org.springframework:spring-test"

    // Tomcat
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

war {
    // omit the version from the war file name
    version = ""
}

tomcatRun {
    outputFile = file('tomcat.log')
}

cloudfoundry {
    target = "https://api.run.pivotal.io"
    space = "development"

    file = file("${war.archivePath}")
    uri = "spring-music-${randomWord}.cfapps.io"
    memory = 512
    instances = 1

    services {
        "music-mongodb" {
            label = "mongolab"
            plan = "sandbox"
        }
    }
}
